name: Build

on:
  push:
    paths:
      - '.github/workflows/build.yml'
      - 'app/**'
      - 'gradle/**'
      - '*.gradle'
      - '*.properties'
  pull_request:
  workflow_dispatch:
    inputs:
      release:
        description: 'Release'
        type: boolean
        required: true
        default: false
      lspatch:
        description: 'LSPatch'
        type: boolean
        required: true
        default: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Download LINE APKs
        run: |
          download_apk() {
            curl -L -o "$1" "$2"
          }
          download_apk "Original.LINE.apk" "https://github.com/areteruhiro/LIMEs/releases/download/v1.14.7.7.3/Original.arm64-v8a.+.armeabi-v7a.LINE_v14.19.1.apk"
          download_apk "original.line.apk" "https://github.com/areteruhiro/LIMEs/releases/download/v1.14.7.7.3/original.armeabi-v7a.line-14.19.1.apk"
          download_apk "Original_v14.19.1arm64-v8a.apk" "https://github.com/areteruhiro/LIMEs/releases/download/v1.14.7.7.3/Original.LINE_v14.19.1arm64-v8a.apk"

      - name: Set environments
        run: |
          version=$(grep versionName app/build.gradle | awk '{print $2}' | tr -d \")
          line_ver_code=$(grep HOOK_TARGET_VERSION app/build.gradle | awk '{print $4}' | tr -d \'\")
          commit=$(echo ${{ github.sha }} | cut -c-7)
          repo=$(echo ${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/})
          echo "version=v$version" >> $GITHUB_ENV
          echo "line_ver_code=$line_ver_code" >> $GITHUB_ENV
          echo "commit=$commit" >> $GITHUB_ENV
          echo "repo=$repo" >> $GITHUB_ENV

      - name: Set LINE Original Version Name
        run: echo "line_ver=$(echo '${{ env.line_ver_code }}' | awk '{print substr($0,1,2)"."substr($0,3,2)"."int(substr($0,5,1))}')" >> $GITHUB_ENV

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: LSPatch
        if: github.event.inputs.lspatch == 'true'
        run: |
          echo "Patching LIME..."
          for apk in Original.LINE.apk original.line.apk Original_v14.19.1arm64-v8a.apk; do
            java -jar lspatch.jar "$apk" -m "app/build/outputs/apk/debug/app-debug.apk" -l 2 -v
            arch=$(echo "$apk" | grep -oP '(?<=\.)(arm64-v8a|armeabi-v7a)(?=\.apk)')
            new_name="Patched Limes V${{ env.line_ver }}-${arch}-lspatched.apk"
            mv "app/build/outputs/apk/debug/app-debug-lspatched.apk" "$new_name"
          done

      - name: Build with Gradle
        run: |
          if [ "${{ inputs.release }}" == "true" ]; then
            echo "${{ secrets.STORE_FILE }}" | base64 -d > app/release.jks
            export STORE_PASSWORD="${{ secrets.STORE_PASSWORD }}"
            export KEY_ALIAS="${{ secrets.KEY_ALIAS }}"
            export KEY_PASSWORD="${{ secrets.KEY_PASSWORD }}"
            ./gradlew assembleRelease --no-daemon --stacktrace
            cp app/build/outputs/apk/release/app-release.apk ${{ env.repo }}-${{ env.version }}.apk
          else
            ./gradlew assembleDebug --no-daemon --stacktrace
          fi

      - name: Rename Original LINE APK
        run: |
          if [ -f "Original.LINE.apk" ]; then
            mv "Original.LINE.apk" "Limes arm64-v8a-armeabi-v7a.apk"
          else
            echo "Original.LINE.apk not found!"
            exit 1
          fi

      - name: Upload Module APK
        uses: actions/upload-artifact@v4
        if: github.event.inputs.release != 'true'
        with:
          name: ${{ env.repo }}-${{ env.version }}@${{ env.commit }}
          path: app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error

      - name: Upload Patched LINE APKs
        uses: actions/upload-artifact@v4
        if: github.event.inputs.lspatch == 'true'
        with:
          name: Patched LINE APKs
          path: |
            Patched Limes V${{ env.line_ver }}-arm64-v8a-lspatched.apk
            Patched Limes V${{ env.line_ver }}-armeabi-v7a-lspatched.apk
            Patched Limes V${{ env.line_ver }}-arm64-v8a-armeabi-v7a-lspatched.apk
          if-no-files-found: error

      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.event.inputs.release == 'true'
        with:
          tag_name: ${{ env.version }}
          draft: false
          prerelease: false
          files: |
            ${{ env.repo }}-${{ env.version }}.apk
            Patched Limes V${{ env.line_ver }}-arm64-v8a-lspatched.apk
            Patched Limes V${{ env.line_ver }}-armeabi-v7a-lspatched.apk
            Patched Limes V${{ env.line_ver }}-arm64-v8a-armeabi-v7a-lspatched.apk
          body: |
            # 更新内容
            
            ## 対応するLINEのバージョン
            ${{ env.line_ver }}
            
            ### 差分
            https://github.com/${{ github.repository }}/compare/${{ steps.previous.outputs.tag }}...${{ env.version }}
