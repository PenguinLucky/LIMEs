name: Build

on:
  push:
    paths:
      - '.github/workflows/build.yml'
      - 'app/'
      - 'gradle/'
      - '.gradle'
      - '.properties'
  pull_request:
  workflow_dispatch:
    inputs:
      release:
        description: 'Release'
        type: boolean
        required: true
        default: false
      lspatch:
        description: 'LSPatch'
        type: boolean
        required: true
        default: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set environments
        run: |
          {
            echo "version=v$(grep versionName app/build.gradle | awk '{print $2}' | tr -d \")"
            echo "line_ver_code=$(grep HOOK_TARGET_VERSION app/build.gradle | awk '{print $4}' | tr -d \'\")"
            echo "commit=$(echo ${{ github.sha }} | cut -c-7)"
            echo "repo=$(echo ${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/})"
          } >> $GITHUB_ENV

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Download Required APKs
        if: github.event.inputs.release == 'true'
        run: |
          curl -L -o Original_ARM.apk https://github.com/areteruhiro/LIMEs/releases/download/v1.14.7.7.3/Original.arm64-v8a.+.armeabi-v7a.LINE_v14.19.1.apk
          curl -L -o Original_ARMv7.apk https://github.com/areteruhiro/LIMEs/releases/download/v1.14.7.7.3/original.armeabi-v7a.line-14.19.1.apk
          curl -L -o Original_ARM64.apk https://github.com/areteruhiro/LIMEs/releases/download/v1.14.7.7.3/Original.LINE_v14.19.1arm64-v8a.apk

      - name: Download LSPatch
        if: github.event.inputs.release == 'true'
        run: |
          curl -L -o lspatch.jar https://github.com/JingMatrix/LSPatch/releases/latest/download/lspatch.jar
          
      - name: Build with Gradle
        run: |
          if [ "${{ inputs.release }}" == "true" ]; then
            echo "${{ secrets.STORE_FILE }}" | base64 -d > app/release.jks
            export STORE_PASSWORD="${{ secrets.STORE_PASSWORD }}"
            export KEY_ALIAS="${{ secrets.KEY_ALIAS }}"
            export KEY_PASSWORD="${{ secrets.KEY_PASSWORD }}"
            ./gradlew assembleRelease --no-daemon --stacktrace
            cp -f app/build/outputs/apk/release/app-release.apk ${{ env.repo }}-${{ env.version }}.apk
          else
            ./gradlew assembleDebug --no-daemon --stacktrace
          fi
          
      - name: LSPatch
        if: github.event.inputs.release == 'true'
        run: |
          for file in Original_ARM.apk Original_ARMv7.apk Original_ARM64.apk; do
            echo "Patching $file..."
            # Use the correct path for the release APK
            java -jar lspatch.jar "$file" -m "${{ env.repo }}-${{ env.version }}.apk" -l 2 -v
            mv "${file%.apk}-lspatched.apk" "Patched_${{ env.version }}_$file"
          done
      - name: Upload Patched APKs
        uses: actions/upload-artifact@v4
        if: github.event.inputs.release == 'true'
        with:
          name: Patched_APKs
          path: Patched_${{ env.version }}_*.apk
          if-no-files-found: error

      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.event.inputs.release == 'true'
        with:
          tag_name: ${{ env.version }}
          draft: false
          prerelease: false
          files: |
            ${{ env.repo }}-${{ env.version }}.apk
            Patched_${{ env.version }}_Original_ARM.apk
            Patched_${{ env.version }}_Original_ARMv7.apk
            Patched_${{ env.version }}_Original_ARM64.apk
          body: |
            # 更新内容
            
            ## 対応するLINEのバージョン
            ${{ env.line_ver }}
            
            ### 差分
            https://github.com/${{ github.repository }}/compare/${{ steps.previous.outputs.tag }}...${{ env.version }}
